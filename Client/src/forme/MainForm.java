/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;
import communication.Communication;
import domain.AbstractDO;
import model.ModelSearchPatient;
import domain.Doctor;
import domain.Patient;
import domain.Place;
import exception.ClientException;
import form.mode.FormMode;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import operations.Operation;
import transfer.ClientRequest;
import transfer.ServerResponse;

/**
 *
 * @author USER
 */
public class MainForm extends javax.swing.JFrame {
    private Doctor doctor;//atribut doctor da se posalje ChangDr formi
     List<Patient> searchResults;//za tabelu pacijenata
     ModelSearchPatient model;
     
    public MainForm(Doctor d) {
        
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        searchResults=new ArrayList<>();
        refresh(searchResults);
        this.setLocationRelativeTo(null);
        this.setTitle("SLUŽBA HITNE POMOĆI");
       jTextFieldDoctor.setText(d.getName()+" "+d.getSurname());
       customizeTextField(jTextFieldDoctor, false, false, Color.lightGray, Color.red);
        doctor=d;//postaviti od login forme na ovu,pa za atribut da se sl prosled
         fillCmb();
     

        
        
    }
private void fillCmb() {
    try{
       cmbPlace.removeAllItems();
        ClientRequest kz=new ClientRequest();
        
        kz.setOperacija(Operation.VRATI_MESTA);
        kz.setObjekatOperacije(new Place());
        
        Communication.getInstance().posaljiZahtev(kz);
        ServerResponse sod=Communication.getInstance().primiOdgovor();
        List<AbstractDO>mesta=(List<AbstractDO>) sod.getOdgovor();
        
        cmbPlace.setModel(new DefaultComboBoxModel(mesta.toArray()));
        cmbPlace.setSelectedIndex(-1);
    } catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Veza sa serverom je prekinuta!", "Greška", JOptionPane.ERROR_MESSAGE);
    System.exit(0); 
}
    }

  private void searchPatient()  {
       try{ 
           String ime=patientName.getText().trim();//Antonije
       // System.out.println(ime);
        
        String prezime=patientSurname.getText().trim();//Mihic
        //System.out.println(prezime);
        Place mesto=(Place) cmbPlace.getSelectedItem();
        String jmbg=patientjmbg.getText().trim();
    /*IME IS EMPTY DA MORA IME PREZIME AL OVO DOZVOLJAVA I PO INICIJALIMA IMENA*/
        
        validateValuesSearch();
        ClientRequest kz=new ClientRequest();
        
        kz.setOperacija(Operation.VRATI_PACIJENTE);
        
        kz.setObjekatOperacije(new Patient(ime, prezime, mesto,jmbg));
        Communication.getInstance().posaljiZahtev(kz);
        ServerResponse sod=Communication.getInstance().primiOdgovor();
        searchResults = (List<Patient>) sod.getOdgovor();
        if(searchResults.isEmpty()){
        JOptionPane.showMessageDialog(this, "Sistem ne može da nadje pacijente po zadatim kriterijumima!", "", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        JOptionPane.showMessageDialog(this, "Sistem je našao pacijente po zadatim kriterijumima.", "", JOptionPane.INFORMATION_MESSAGE);

        }
          
        refresh(searchResults);     

    } catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Veza sa serverom je prekinuta!", "Greška", JOptionPane.ERROR_MESSAGE);
    System.exit(0); 
}}     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDoctor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        patientName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePatient = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        JButonIzmeni = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbPlace = new javax.swing.JComboBox<>();
        patientSurname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonPretrazi = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patientjmbg = new javax.swing.JTextField();
        jButtonResetujFilter = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuUserShow = new javax.swing.JMenuItem();
        jMenuItemChange = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setText("KREIRAJ PACIJENTA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("DOKTOR");

        jTextFieldDoctor.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jTextFieldDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDoctorActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel2.setText("PACIJENT");

        patientName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePatient.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTablePatient);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/4..png"))); // NOI18N

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(204, 0, 0));
        jButton5.setText("KREIRAJ IZVEŠTAJ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(204, 0, 0));
        jButton6.setText("DETALJI PACIJENTA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        JButonIzmeni.setBackground(new java.awt.Color(204, 204, 255));
        JButonIzmeni.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        JButonIzmeni.setForeground(new java.awt.Color(204, 0, 0));
        JButonIzmeni.setText("IZMENI PACIJENTA");
        JButonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButonIzmeniActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel4.setText("IME");

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel5.setText("MESTO");

        cmbPlace.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPlaceActionPerformed(evt);
            }
        });

        patientSurname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel7.setText("JMBG");

        jButtonPretrazi.setBackground(new java.awt.Color(204, 204, 255));
        jButtonPretrazi.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jButtonPretrazi.setForeground(new java.awt.Color(204, 0, 0));
        jButtonPretrazi.setText("PRETRAŽI");
        jButtonPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPretraziActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/3.1.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Palatino Linotype", 1, 14)); // NOI18N
        jLabel8.setText("PREZIME");

        patientjmbg.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        patientjmbg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientjmbgActionPerformed(evt);
            }
        });

        jButtonResetujFilter.setBackground(new java.awt.Color(204, 204, 255));
        jButtonResetujFilter.setFont(new java.awt.Font("Palatino Linotype", 3, 14)); // NOI18N
        jButtonResetujFilter.setForeground(new java.awt.Color(204, 0, 0));
        jButtonResetujFilter.setText("RESETUJ FILTER");
        jButtonResetujFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetujFilterActionPerformed(evt);
            }
        });

        jMenu1.setText("KORISNICKI NALOG");

        jMenuUserShow.setText("PRIKAŽI");
        jMenuUserShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuUserShowActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuUserShow);

        jMenuItemChange.setText("IZMENI");
        jMenuItemChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChangeActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemChange);

        jMenuItem1.setText("ODJAVI SE");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jButtonPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jButtonResetujFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbPlace, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(patientName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patientSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(patientjmbg, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JButonIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)))
                .addGap(173, 173, 173)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(patientjmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(patientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(patientSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(76, 76, 76)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(cmbPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonResetujFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(JButonIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        PatientForm f=new PatientForm(this,null,FormMode.FORM_CREATE, true);
        //null jer kreiramo pacijenta sada tek
        f.setVisible(true);
        refresh(new ArrayList<>());        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuUserShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuUserShowActionPerformed
        // TODO add your handling code here:
        UserForm form = new UserForm(this, doctor, FormMode.FORM_VIEW, true);
        form.setVisible(true);

        
    }//GEN-LAST:event_jMenuUserShowActionPerformed

    private void jMenuItemChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChangeActionPerformed
        UserForm form = new UserForm(this, doctor, FormMode.FORM_EDIT, true);//poslati podaci iy login forme koji su ucitani
        form.setVisible(true);
        //da izmeni i podatke na ovoj formi vezane za dr!!!
        jTextFieldDoctor.setText(doctor.getName()+" "+doctor.getSurname());


    }//GEN-LAST:event_jMenuItemChangeActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int row=jTablePatient.getSelectedRow();
        //SLUCAJ KAD NIJE NIS SELEKTOVAO A SAMO KLIKNUO DUGME JOPTIONPANE I RETURN
        if (row == -1) {
    JOptionPane.showMessageDialog(this, "Molimo vas da selektujete pacijenta iz tabele.", "Upozorenje", JOptionPane.WARNING_MESSAGE);
    return; // Izlaz iz metode ako nije selektovan nijedan red
}
        Patient p=model.getPatient(row);
        ReportForm rf=new ReportForm(this,true,p,doctor);//modalan da bdue
        rf.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         int row=jTablePatient.getSelectedRow();
        //SLUCAJ KAD NIJE NIS SELEKTOVAO A SAMO KLIKNUO DUGME JOPTIONPANE I RETURN
        if (row == -1) {
    JOptionPane.showMessageDialog(this, "Molimo vas da selektujete pacijenta iz tabele.", "Upozorenje", JOptionPane.WARNING_MESSAGE);
    return; // Izlaz iz metode ako nije selektovan nijedan red
}
        Patient p=model.getPatient(row);
        PatientForm rf=new PatientForm(this,p,FormMode.FORM_VIEW,true);//modalan da bdue
        rf.setVisible(true);
        
     
      
        
        
        
                                
    }//GEN-LAST:event_jButton6ActionPerformed

    private void JButonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButonIzmeniActionPerformed
        // TODO add your handling code here:
         int row=jTablePatient.getSelectedRow();
        if (row == -1) {
    JOptionPane.showMessageDialog(this, "Molimo vas da selektujete pacijenta iz tabele.", "Upozorenje", JOptionPane.WARNING_MESSAGE);
    return; 
}
        Patient p=model.getPatient(row);//selektovani pacijent
        PatientForm rf=new PatientForm(this,p,FormMode.FORM_EDIT,true);//modalan da bdue
        rf.setVisible(true);
        refresh(new ArrayList<>());        
    }//GEN-LAST:event_JButonIzmeniActionPerformed

    private void jButtonPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPretraziActionPerformed
    
            // TODO add your handling code here:
            searchPatient();
    }//GEN-LAST:event_jButtonPretraziActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try{
        ClientRequest kz=new ClientRequest(Operation.ODJAVA, doctor);
        Communication.getInstance().posaljiZahtev(kz);
        ServerResponse so=Communication.getInstance().primiOdgovor();
        if(so.getUspesnost()){ JOptionPane.showMessageDialog(this, so.getPoruka(), "Uspešno odjava!", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();//ovo zatvori
        LoginForm f=new LoginForm();//login formu otvori
        f.setVisible(true);}
        else{
        JOptionPane.showMessageDialog(this, so.getPoruka(), "Nespešna odjava!", JOptionPane.WARNING_MESSAGE);}
        } catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Veza sa serverom je prekinuta!", "Greška", JOptionPane.ERROR_MESSAGE);
    System.exit(0); 
}
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextFieldDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDoctorActionPerformed

    private void cmbPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPlaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPlaceActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        JOptionPane.showMessageDialog(this, "Molimo Vas da se odjavite sa sistema.","ODJAVA",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_formWindowClosing

    private void patientjmbgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientjmbgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientjmbgActionPerformed

    private void jButtonResetujFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetujFilterActionPerformed
        // TODO add your handling code here:
        refresh(new ArrayList<>());
        cmbPlace.setSelectedIndex(-1);
        patientjmbg.setText("");
        patientName.setText("");
        patientSurname.setText("");


    }//GEN-LAST:event_jButtonResetujFilterActionPerformed

//fja zajednicka za sve ove delove-bez ponavljanja da bude sve osobine podesene
private void customizeTextField(JTextField textField, boolean editable, boolean focusable, Color background, Color foreground) {
    textField.setEditable(editable);//da nema menjanja
    textField.setFocusable(focusable);//da nema selektovanja
    //postavila boju pozadine i txt za ove podatke popunjene
    textField.setBackground(background);
    textField.setForeground(foreground);
}
public void refresh(List<Patient>lista){

 model = new ModelSearchPatient(lista);
 jTablePatient.setModel(model);
 model.fireTableDataChanged(); // osvezi tabelu

}
private void validateValuesSearch() throws ClientException {
    List<String> errors = new ArrayList<>();
//provere ako nije prazno neko od ovih polja
    // jmbg 
    String jmbg = patientjmbg.getText().trim();
    if (!jmbg.isEmpty() &&  !jmbg.matches("[0-9]+") ) {
        errors.add("* JMBG sme sadržavati samo brojeve.");
    }

    // Provera imena
    String name = patientName.getText().trim();
   if (!name.isEmpty() && !name.matches("[A-Za-zšđčćžŠĐČĆŽ ]+")) {
        errors.add("* Ime može sadržavati samo slova.");
    }

    // Provera prezimena
    String surname = patientSurname.getText().trim();
   if (!surname.isEmpty() &&   !surname.matches("[A-Za-zšđčćžŠĐČĆŽ ]+")) {
        errors.add("* Prezime može sadržavati samo slova.");
    }
    // Ako postoje greske prikazi i baci izuzetak 
    if (!errors.isEmpty()) {
        String errorMessage = "Ispravite sledeće greške prilikom pretrage:\n" + String.join("\n", errors);
        JOptionPane.showMessageDialog(this, errorMessage, "Greška", JOptionPane.ERROR_MESSAGE);
        throw new ClientException("Validacija nije prošla.");
    }
}
    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButonIzmeni;
    private javax.swing.JComboBox<String> cmbPlace;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonPretrazi;
    private javax.swing.JButton jButtonResetujFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemChange;
    private javax.swing.JMenuItem jMenuUserShow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePatient;
    private javax.swing.JTextField jTextFieldDoctor;
    private javax.swing.JTextField patientName;
    private javax.swing.JTextField patientSurname;
    private javax.swing.JTextField patientjmbg;
    // End of variables declaration//GEN-END:variables
}
